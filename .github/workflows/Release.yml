name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: linux
          - os: ubuntu-latest
            target: windows

    steps:
      - name: Set up CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Install Dependencies
        run: |
          if [[ "${{ matrix.target }}" == "linux" ]]; then
            sudo apt-get install -y libboost-locale-dev libboost-filesystem-dev libpng-dev libjpeg-dev zlib1g-dev libssl-dev libwebp-dev
            sudo apt-get install -y g++-mingw-w64-x86-64
          else
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
            choco install boost-msvc-14.0.0 zlib libpng libjpeg-turbo openssl libwebp win-iconv
          fi

      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == "linux" ]]; then
            mkdir build-linux
            cd build-linux
            cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j8
          else
            mkdir build-windows
            cd build-windows
            cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain-mingw.cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j8
          fi

      - name: Test
        run: |
          if [[ "${{ matrix.target }}" == "linux" ]]; then
            cd build-linux
            ctest --output-on-failure
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Automatic release created by GitHub Actions
          draft: false
          prerelease: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Built Artifacts
          path: |
            build/
